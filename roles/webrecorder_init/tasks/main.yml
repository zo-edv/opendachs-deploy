  - name: 'WR Clone'
    git:
      repo: '{{ wr_repo }}'
      dest: '{{ wr_dir }}'
      version: 'master'

  - name: 'Check if already inited (wr.env exists)'
    stat:
      path: '{{ wr_dir }}/wr.env'
    register: wr_env

  - name: 'WR Init'
    command: ./init-default.sh
    args:
      chdir: '{{ wr_dir }}'
    when: wr_env.stat.exists == False

  - name: 'WR Set Hostnames in Env'
    lineinfile:
      path: '{{ wr_dir }}/wr.env'
      regexp: '{{ item.regexp }}'
      line: '{{ item.replace }}'

    with_items:
      - { regexp: 'APP_HOST=', replace: 'APP_HOST={{ wr_app_host }}' }
      - { regexp: 'CONTENT_HOST=', replace: 'CONTENT_HOST={{ wr_content_host }}' }
      - { regexp: 'SCHEME=', replace: 'SCHEME=https' }
      - { regexp: 'LDAP_URI=', replace: 'LDAP_URI={{ wr_ldap_uri }}' }
      - { regexp: 'LDAP_DOMAIN=', replace: 'LDAP_DOMAIN={{ wr_ldap_domain }}' }
      - { regexp: 'LDAP_BASE=', replace: 'LDAP_BASE={{ wr_ldap_base }}' }
      - { regexp: 'LDAP_ADMIN_GROUP=', replace: 'LDAP_ADMIN_GROUP={{ wr_ldap_admin_group }}' }
      - { regexp: 'LDAP_LOGIN_GROUP=', replace: 'LDAP_LOGIN_GROUP={{ wr_ldap_login_group }}' }
      - { regexp: 'REVIEWER_EMAIL=', replace: 'REVIEWER_EMAIL={{ wr_review_mail }}' }
      - { regexp: 'SMTP_URL=', replace: 'EMAIL_SMTP_URL={{ wr_smtp_url }}' }
      - { regexp: 'EMAIL_SENDER=', replace: 'EMAIL_SENDER={{ wr_mail_sender }}' }
      - { regexp: 'NODE_ENV=', replace: 'NODE_ENV={{ wr_NODE_ENV }}' }

  - name: 'WR Run Docker Compose'
    become: true
    become_user: "{{ ansible_user_id }}"
    docker_service:
      project_src: '{{ wr_dir }}'
      build: yes
      state: present




